// Generated by IcedCoffeeScript 1.7.1-b
(function() {
  var decode, decode_json, decode_json_obj, purepack;

  purepack = require('purepack');

  exports.decode = decode = function(_arg) {
    var buf, json, mpack;
    buf = _arg.buf, json = _arg.json, mpack = _arg.mpack;
    if (json) {
      json = true;
    } else if (mpack) {
      json = false;
    } else {
      json = true;
    }
    if (json) {
      return decode_json(buf);
    } else {
      return purepack.unpack(buf);
    }
  };

  exports.decode_json_obj = decode_json_obj = function(o) {
    var b, e, k, out, v, _i, _len, _results, _to_buffer;
    _to_buffer = function(o) {
      var b;
      if (Object.keys(o).length !== 1) {
        return null;
      } else if ((b = o.__b) != null) {
        return new Buffer(b, 'base64');
      } else if ((b = o.__h) != null) {
        return new Buffer(b, 'hex');
      } else {
        return null;
      }
    };
    if (typeof o !== 'object') {
      return o;
    } else if (Array.isArray(o)) {
      _results = [];
      for (_i = 0, _len = o.length; _i < _len; _i++) {
        e = o[_i];
        _results.push(decode_json_obj(e));
      }
      return _results;
    } else if ((b = _to_buffer(o))) {
      return b;
    } else {
      out = {};
      for (k in o) {
        v = o[k];
        out[k] = decode_json_obj(v);
      }
      return out;
    }
  };

  decode_json = function(buf) {
    return decode_json_obj(JSON.parse(buf));
  };

}).call(this);
