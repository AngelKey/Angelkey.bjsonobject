// Generated by IcedCoffeeScript 1.7.1-b
(function() {
  var E, check, checkers;

  checkers = require('./checkers').checkers;

  E = function(path, err) {
    if (err != null) {
      err.message = "At object path '" + path + "': " + err.message;
    }
    return err;
  };

  exports.check_template = check = function(template, obj, path) {
    var a, b, err, i, k, typ, v, v2, _i, _len;
    if (path == null) {
      path = "$";
    }
    typ = typeof template;
    if (typ === 'function') {
      return E(path, template(obj));
    } else if (typ === 'undefined') {
      return null;
    } else if (typ !== 'object') {
      return E(path, checkers.value(template)(obj));
    } else if (Array.isArray(template)) {
      if (typeof obj !== 'object' || !Array.isArray(obj)) {
        return E(path, new Error("Needed an array"));
      } else if ((a = template.length) > (b = obj.length)) {
        return E(path, new Error("Array too short: " + b + " elements but needed " + a));
      } else {
        err = null;
        for (i = _i = 0, _len = template.length; _i < _len; i = ++_i) {
          v = template[i];
          err = check(v, obj[i], path + ("[" + i + "]"));
          if (err != null) {
            break;
          }
        }
        return err;
      }
    } else if (template === null) {
      if (obj === null) {
        return null;
      } else {
        return E(path, new Error("expected null"));
      }
    } else if (typeof obj !== 'object') {
      return E(path, new Error("Needed an object"));
    } else {
      err = null;
      for (k in template) {
        v = template[k];
        v2 = obj[k];
        if ((v != null) && (v2 == null)) {
          err = E(path, new Error("No key for " + k));
        } else if (v != null) {
          err = check(v, v2, path + ("." + k));
        }
        if (err != null) {
          break;
        }
      }
      return err;
    }
  };

}).call(this);
